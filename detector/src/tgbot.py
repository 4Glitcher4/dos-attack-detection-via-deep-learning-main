import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from main import settings
from ip import info, blocker, whitelist
from util.logger import log

# –ó–¥–µ—Å—å –º—ã —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç—ã `Bot` –∏ `Dispatcher` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram.
bot = Bot(token=settings.telegram_bot_token)
dp = Dispatcher(bot, storage=MemoryStorage())


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram.
async def send_ddos_notification(ip: str = ""):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º IP –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –±–æ—Ç–∞.
    await dp.storage.set_data(chat=settings.your_telegram_id, data={"ip": ip})

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    await bot.send_message(
        chat_id=settings.your_telegram_id,
        text=f"‚ö†Ô∏è –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ DoS/DDoS-–∞—Ç–∞–∫–∞!\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± IP:\n\n{info.get_readable(ip, filter_keys=['readme'])}\n\n–•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç IP?",
        reply_markup=get_inline_keyboard(),
    )
    log.debug("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ DoS/DDoS-–∞—Ç–∞–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.
@dp.callback_query_handler()
async def on_confirmation(callback_query: types.CallbackQuery, state: FSMContext):
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å IP.
    choice = callback_query.data

    # –ü–æ–ª—É—á–∞–µ–º IP –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞.
    ip = str((await dp.storage.get_data(chat=settings.your_telegram_id)).get("ip"))

    # –î–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    if choice == "block":
        blocker.block(ip)
        await bot.send_message(
            chat_id=callback_query.message.chat.id, text="üö´‚úÖ IP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!"
        )
    elif choice == "whitelist":
        whitelist.add(ip)
        await bot.send_message(
            chat_id=callback_query.message.chat.id, text="üìù‚úÖ IP —Ä–∞–∑—Ä–µ—à–µ–Ω!"
        )

    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–∏ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã.
    await bot.edit_message_reply_markup(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        reply_markup=None,
    )

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞.
    await state.finish()


# –ó–¥–µ—Å—å –º—ã —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è.
def get_inline_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data="block"),
        InlineKeyboardButton("üìù –†–∞–∑—Ä–µ—à–∏—Ç—å", callback_data="whitelist"),
    )
    return keyboard


# –ó–¥–µ—Å—å –º—ã –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞.
async def start_bot():
    log.debug("–ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞...")
    await dp.start_polling()


if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    asyncio.ensure_future(start_bot())
    loop.run_forever()
